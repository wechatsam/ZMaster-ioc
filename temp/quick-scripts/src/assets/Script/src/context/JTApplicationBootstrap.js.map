{"version":3,"sources":["assets\\Script\\src\\context\\JTApplicationBootstrap.ts"],"names":[],"mappings":"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","file":"","sourceRoot":"/","sourcesContent":["///<reference path=\"../events/JTEventSignaler.ts\"/>\r\nnamespace com \r\n{\r\n    export abstract class JTApplicationBootstrap extends JTEventSignaler implements JTIOption\r\n    {\r\n        protected static _contextMap:{[name:string]:any} = {};\r\n\r\n        private static ____ctx:JTIApplicationContext[] = []\r\n\r\n        public static CONTEXT_PROTOCOL:string = \"Context_Protocol\";\r\n\r\n        public static CONTEXT_ERROR_MESSAGE:string = \"Context_ErrorMessage\";\r\n\r\n        public static CONTEXT_TEMPLATE:string = \"Context_Template\";\r\n\r\n        public static CONTEXT_MAPPING:string = \"Context_Response_Mapping\";\r\n\r\n        public static CONTEXT_SCENE:string = \"Context_Scene\";\r\n\r\n        public static CONTEXT_LAYER:string = \"Context_Layer\";\r\n\r\n        public static CONTEXT_RUNNER:string = \"Context_RUNNER\";\r\n\r\n        protected static CONTEXT_LAYOUT:string = \"Context_Layout\";\r\n\r\n        public static CHANNEL:string = \"Channel\";\r\n        public static WEBSOCKET_CHANNEL:string = \"Websocket_Channel\";\r\n        public static HTTP_CHANNEL:string = \"Http_Channel\";\r\n        public static CHANNEL_PIPELINE:string = \"Pipeline\";\r\n\r\n        private _serverLoader:JTTextLoader = null;\r\n        private _serverTemplate:JTServerConfigTemplate = null;\r\n\r\n        private __loaderManager:JTFuturePipeline = null;\r\n        private _launchConnected:boolean = false;\r\n\r\n\r\n\r\n        constructor()\r\n        {\r\n            super();\r\n        }\r\n\r\n        /**\r\n         * 选项必须继承--JTApplicationContext\r\n         * @param type 类型\r\n         * @param _context 扩展上下文\r\n         * @returns \r\n         */\r\n        public option(type: string, _context: JTIApplicationContext): JTIChildOption \r\n        {\r\n            return this.registerContextAlias(type, _context) as JTIChildOption\r\n        }\r\n\r\n        /**\r\n         * 构建上下文对象\r\n         */\r\n        protected buildContexts():void\r\n        {\r\n            let __contexts:JTIApplicationContext[] = JTApplicationBootstrap.____ctx;\r\n            let count:number = __contexts.length;\r\n            for (let i:number = 0; i < count; i++)\r\n            {\r\n                let ___c:JTIApplicationContext = __contexts[i];\r\n                ___c.build();\r\n            }\r\n        }\r\n\r\n        /**\r\n         * 构建上下文对象\r\n         */\r\n        protected buildComplete():void\r\n        {\r\n            let __contexts:JTIApplicationContext[] = JTApplicationBootstrap.____ctx;\r\n            let count:number = __contexts.length;\r\n            for (let i:number = 0; i < count; i++)\r\n            {\r\n                let __c:JTIApplicationContext = __contexts[i];\r\n                __c.buildComplete();\r\n            }\r\n        }\r\n\r\n        /**\r\n         * 框架通信连接\r\n         * @param channel \r\n         * @returns \r\n         */\r\n        public channel(channel:JTIChannel):JTIChannelOption\r\n        {\r\n            this.buildContexts();\r\n            this.registerContextAlias(JTApplicationBootstrap.CHANNEL, channel);\r\n            let channelPipeline:JTIChannelPipeline = new JTChannelPipeline();\r\n            channelPipeline.bind(channel);\r\n            return this.registerContextAlias(JTApplicationBootstrap.CHANNEL_PIPELINE, channelPipeline);\r\n        }\r\n\r\n        /**\r\n         * 通信选项\r\n         * @param type 适配器类型\r\n         * @param channelAdapter 适配器\r\n         * @returns \r\n         */\r\n        public childOption(type:string, channelAdapter:JTIChannelContext):JTIChannelOption\r\n        {\r\n            let channelPipeline:JTIChannelPipeline = this.getContext(JTApplicationBootstrap.CHANNEL_PIPELINE);\r\n            channelPipeline.childOption(type, channelAdapter);\r\n            return this;\r\n        }\r\n\r\n        public layout(layoutType:string):JTIChildOption\r\n        {\r\n            JTLayoutManager.currentLayout = layoutType;\r\n            return this.registerContextAlias(JTApplicationBootstrap.CONTEXT_LAYOUT, new JTLayoutManager());\r\n        }\r\n        \r\n        /**\r\n         * 使用模板配置服务器连接\r\n         * 该方法和launch()一起使用\r\n         * @param serverLoader 服务器地址和端口配置\r\n         * @param serverId 服务器ID\r\n         */\r\n        public configServerTemaplete(serverLoader:JTTextLoader, serverId:string):JTServerConfigTemplate\r\n        {\r\n            this._serverLoader = serverLoader;\r\n            this._serverTemplate = serverLoader.toValue(serverId);\r\n            return this._serverTemplate\r\n        }\r\n\r\n        /**\r\n         * 配置网络\r\n         * 该方法和launch()一起使用\r\n         * @param host 服务器域名\r\n         * @param port 服务器端口\r\n         */\r\n        public conofig(host:string, port:number):JTServerConfigTemplate \r\n        {\r\n            this._serverTemplate = new JTServerConfigTemplate();\r\n            this._serverTemplate.setup(host, port);\r\n            return this._serverTemplate;\r\n        }\r\n\r\n        public connect():JTIChannel\r\n        {\r\n            let channel:JTIChannel = null;\r\n            if (!this._launchConnected)\r\n            {\r\n                let channelPipeline:JTIChannelPipeline = this.getContext(JTApplicationBootstrap.CHANNEL_PIPELINE);\r\n                channel = channelPipeline.launch(this._serverTemplate.host, this._serverTemplate.port);\r\n                this._launchConnected = true;\r\n            }\r\n            return channel;\r\n        }\r\n\r\n        /**\r\n         * 启动框架\r\n         */\r\n        public launch():JTIChannel\r\n        {\r\n            if (this.__loaderManager) this.__loaderManager.run();\r\n            this.buildComplete();\r\n            let channel:JTIChannel = this.connect();\r\n            this.launchSucceed();\r\n            return channel;\r\n        }\r\n\r\n        protected abstract launchSucceed():void\r\n\r\n        /**\r\n         * 加载资源\r\n         * @param assets 任务列表\r\n         * @param createRender 创加加载器的回调函数 ---- 需要继承JTTaskExecutor类\r\n         * @returns 返回任务执行队列\r\n         */\r\n        public preloadAssets(assets:{[url:string]:string}[], createRender?:JTCommand):JTFuturePipeline\r\n        {\r\n            if (!this.__loaderManager)\r\n            {\r\n                this.__loaderManager = new JTFuturePipeline();\r\n            }\r\n            else\r\n            {\r\n                this.__loaderManager.reset();\r\n            }\r\n            this.__loaderManager.dataList = assets;\r\n            this.__loaderManager.itemRender = createRender;\r\n            return this.__loaderManager;\r\n        }\r\n\r\n        /**\r\n         * 加载\r\n         * 需要配合await一起使用 \r\n         */\r\n        public async load():Promise<any>\r\n        {\r\n           await this.__loaderManager.run();\r\n        }\r\n\r\n        public setDesignResolutionSize(width:number, height:number, resolutionPolicy?:string | number):void\r\n        {\r\n            JTSession.stageWidth = width;\r\n            JTSession.stageHeight = height;\r\n        }\r\n \r\n        /**\r\n         * 更新模板配置\r\n         * @param resources \r\n         */\r\n        public updateConfigs(resources:any[]):void\r\n        {\r\n            let templateManager:JTAbstractTemplateManager = this.getContext(JTApplicationBootstrap.CONTEXT_TEMPLATE) as JTAbstractTemplateManager;\r\n            templateManager.updateConfigs(resources);\r\n        } \r\n\r\n        public registerContextAlias(key:string, __context:any):JTIOption\r\n        {\r\n            JTApplicationBootstrap._contextMap[key] = __context;\r\n            let contexts:JTIApplicationContext[] = JTApplicationBootstrap.____ctx;\r\n            if (__context instanceof JTApplicationContext)  contexts.push(__context);\r\n            return this;\r\n        }\r\n\r\n        public getContext(key:string):any\r\n        {\r\n            return JTApplicationBootstrap._contextMap[key];\r\n        }\r\n\r\n        public static getContext(key:string):any\r\n        {\r\n            return this._contextMap[key];\r\n        }\r\n    }\r\n}\r\n"]}