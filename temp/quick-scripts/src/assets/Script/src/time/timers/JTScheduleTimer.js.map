{"version":3,"sources":["assets\\Script\\src\\time\\timers\\JTScheduleTimer.ts"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;IAAA,IAAU,GAAG,CA8CZ;IA9CD,WAAU,GAAG;QAET;YAAqC,mCAAO;YAGxC,yBAAY,QAAmB,EAAE,QAAc;gBAAnC,yBAAA,EAAA,YAAmB;gBAA/B,YAEI,kBAAM,QAAQ,EAAE,QAAQ,CAAC,MAAM,CAAC,SAEnC;gBALO,eAAS,GAAS,IAAI,CAAC;gBAI3B,KAAI,CAAC,SAAS,GAAG,QAAQ,CAAC;;YAC9B,CAAC;YAEM,+BAAK,GAAZ,UAAa,QAAe;gBAExB,IAAI,CAAC,KAAK,EAAE,CAAC;gBACb,IAAI,CAAC,WAAW,GAAG,IAAI,CAAC,SAAS,CAAC,MAAM,CAAC;gBACzC,IAAI,CAAC,SAAS,GAAG,QAAQ,CAAC;YAC9B,CAAC;YAED,sBAAW,wCAAW;qBAAtB;oBAEI,OAAO,IAAI,CAAC,SAAS,CAAC,IAAI,CAAC,YAAY,GAAG,CAAC,CAAC,CAAC;gBACjD,CAAC;;;eAAA;YAED,sBAAW,qCAAQ;qBAAnB;oBAEI,OAAO,IAAI,CAAC,SAAS,CAAC;gBAC1B,CAAC;;;eAAA;YAED,iCAAO,GAAP;gBACI,iBAAM,OAAO,WAAE,CAAC;gBAChB,IAAI,CAAC,SAAS,GAAG,IAAI,CAAC;YAC1B,CAAC;YAEa,sBAAM,GAApB,UAAqB,QAAe,EAAE,IAAW;gBAE7C,IAAI,KAAK,GAAoB,MAAM,CAAC,QAAQ,CAAC,eAAe,CAAC,CAAC,GAAG,EAAsB,CAAC;gBACxF,KAAK,CAAC,KAAK,CAAC,QAAQ,EAAE,IAAI,CAAC,CAAC;gBAC5B,OAAO,KAAK,CAAC;YACjB,CAAC;YAEa,mBAAG,GAAjB,UAAkB,KAAc;gBAE5B,WAAW,CAAC,YAAY,CAAC,UAAU,CAAC,KAAY,CAAC,CAAC;gBAClD,MAAM,CAAC,QAAQ,CAAC,eAAe,CAAC,CAAC,GAAG,CAAC,KAAwB,CAAC,CAAC;YACnE,CAAC;YACL,sBAAC;QAAD,CA3CA,AA2CC,CA3CoC,OAAO,GA2C3C;QA3CY,mBAAe,kBA2C3B,CAAA;IACL,CAAC,EA9CS,GAAG,KAAH,GAAG,QA8CZ","file":"","sourceRoot":"/","sourcesContent":["namespace com \r\n{\r\n    export class JTScheduleTimer extends JTTimer implements JTIScheduleTimer\r\n    {\r\n        private _dataList:any[] = null;\r\n        constructor(interval:number = 0, dataList:any[])\r\n        {\r\n            super(interval, dataList.length);\r\n            this._dataList = dataList;\r\n        }\r\n\r\n        public setup(interval:number):void\r\n        {\r\n            this.reset();\r\n            this._totalTimes = this._dataList.length;\r\n            this._interval = interval;\r\n        }\r\n\r\n        public get currentItem():any\r\n        {\r\n            return this._dataList[this.currentCount - 1];\r\n        }\r\n\r\n        public get dataList():any[]\r\n        {\r\n            return this._dataList;\r\n        }\r\n\r\n        recycle(): void {\r\n            super.recycle();\r\n            this._dataList = null;\r\n        }\r\n \r\n        public static create(interval:number, loop:number):JTIScheduleTimer\r\n        {\r\n            let timer:JTIScheduleTimer = JTPool.instance(JTScheduleTimer).get() as JTIScheduleTimer;\r\n            timer.setup(interval, loop);\r\n            return timer;\r\n        } \r\n\r\n        public static put(timer:JTITimer):void\r\n        {\r\n            JTTimerTool.defaultTimer.removeTask(timer as any);\r\n            JTPool.instance(JTScheduleTimer).put(timer as JTScheduleTimer);\r\n        }\r\n    }\r\n}\r\n"]}