{"version":3,"sources":["assets\\Script\\src\\pools\\JTCachePool.ts"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;IAIA,IAAU,GAAG,CA+CZ;IA/CD,WAAU,GAAG;QAET;YAA0D,+BAAS;YAI/D,qBAAY,GAAO;gBAAnB,YAEI,kBAAM,GAAG,CAAC,SAEb;gBALS,iBAAW,GAAO,IAAI,CAAC;gBAI7B,KAAI,CAAC,WAAW,GAAG,EAAE,CAAC;;YAC1B,CAAC;YAEM,yBAAG,GAAV;gBAEI,IAAI,IAAI,CAAC,KAAK,GAAG,CAAC,EAClB;oBACI,IAAI,CAAC,KAAK,EAAG,CAAC;oBACd,OAAO,IAAI,CAAC,KAAK,CAAC,KAAK,EAAE,CAAC;iBAC7B;gBACD,IAAI,CAAC,WAAW,EAAG,CAAC;gBACpB,IAAI,IAAI,GAAK,IAAI,IAAI,CAAC,IAAI,EAAE,CAAC;gBAC7B,IAAI,CAAC,WAAW,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;gBAC5B,OAAO,IAAI,CAAC;YAChB,CAAC;YAEM,8BAAQ,GAAf,UAAgB,KAAU;gBAEpB,IAAI,CAAC,KAAK,EACV;oBACM,KAAK,GAAG,EAAE,CAAC,MAAM,CAAC,IAAI,CAAC,WAAW,CAAC,CAAC;iBACzC;gBACD,OAAM,KAAK,CAAC,MAAM,EAClB;oBACI,IAAI,CAAC,GAAG,CAAC,KAAK,CAAC,KAAK,EAAE,CAAC,CAAA;iBAC1B;YACP,CAAC;YAEa,oBAAQ,GAAtB,UAAuB,GAAO;gBAE1B,IAAI,IAAI,GAAgB,IAAI,CAAC,aAAa,CAAC,GAAG,CAAC,CAAC;gBAChD,IAAI,CAAC,IAAI,EACT;oBACI,IAAI,GAAG,IAAI,CAAC,aAAa,CAAC,GAAG,CAAC,GAAG,IAAI,WAAW,CAAC,GAAG,CAAC,CAAC;iBACzD;gBACD,OAAO,IAAI,CAAC;YAChB,CAAC;YAzCgB,yBAAa,GAAU,EAAE,CAAC;YA0C/C,kBAAC;SA5CD,AA4CC,CA5CyD,MAAM,GA4C/D;QA5CY,eAAW,cA4CvB,CAAA;IACL,CAAC,EA/CS,GAAG,KAAH,GAAG,QA+CZ","file":"","sourceRoot":"/","sourcesContent":["///<reference path=\"JTPool.ts\"/>\r\n/*\r\n* 支持自动将对象全部回收到对象池里;\r\n*/\r\nnamespace com\r\n{\r\n    export class JTCachePool<T extends JTIPoolObject> extends JTPool<T>\r\n    {\r\n        protected static _cachePoolMap:Object = {};\r\n        protected _references:T[] = null;\r\n        constructor(cls:any)\r\n        {\r\n            super(cls);\r\n            this._references = [];\r\n        }\r\n    \r\n        public get():T\r\n        {\r\n            if (this._size > 0)\r\n            {\r\n                this._size --;\r\n                return this._list.shift();\r\n            }\r\n            this._totalCount ++;\r\n            var item:T = new this._cls();\r\n            this._references.push(item);\r\n            return item;\r\n        }\r\n\r\n        public recycles(items?:T[]):void\r\n        {\r\n              if (!items)\r\n              {\r\n                    items = [].concat(this._references); //浅复制\r\n              }\r\n              while(items.length)\r\n              {\r\n                  this.put(items.shift())//每一个对象必须调用recycle()方法\r\n              }\r\n        }\r\n\r\n        public static instance(cls:any):JTICachePool \r\n        {\r\n            var pool:JTICachePool = this._cachePoolMap[cls];\r\n            if (!pool)\r\n            {\r\n                pool = this._cachePoolMap[cls] = new JTCachePool(cls);\r\n            }\r\n            return pool;\r\n        }\r\n    }\r\n}\r\n"]}