{"version":3,"sources":["assets\\Script\\src\\network\\contexts\\decode\\JTDecoderToJSONAdapter.ts"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;IAAA,IAAU,GAAG,CA2BZ;IA3BD,WAAU,GAAG;QAET;YAA4C,0CAAwB;YAMhE;uBAEI,iBAAO;YACX,CAAC;YAPM,sCAAK,GAAZ;YAGA,CAAC;YAMM,uCAAM,GAAb,UAAc,cAAkB;gBAM5B,OAAQ,gBAAgB,CAAC,IAAI,CAAC,cAAc,CAAC,CAAC;YAClD,CAAC;YAEM,6CAAY,GAAnB,UAAoB,cAAgC;gBAEhD,iBAAM,YAAY,YAAC,cAAc,CAAC,CAAC;YACvC,CAAC;YACL,6BAAC;QAAD,CAxBA,AAwBC,CAxB2C,wBAAwB,GAwBnE;QAxBY,0BAAsB,yBAwBlC,CAAA;IACL,CAAC,EA3BS,GAAG,KAAH,GAAG,QA2BZ","file":"","sourceRoot":"/","sourcesContent":["namespace com \r\n{\r\n    export class JTDecoderToJSONAdapter extends JTAbstractDecoderAdapter\r\n    {\r\n        public build(): void {\r\n            \r\n            \r\n        }\r\n        constructor()\r\n        {\r\n            super();\r\n        }\r\n\r\n        public decode(receiveMessage:any):any\r\n        {\r\n            // let data:any = JSON.parse(receiveMessage);\r\n            // let protocol:number = data[\"protocol\"];\r\n            // JTFunctionManager.execute(protocol.toString(), data[\"content\"]);\r\n            // JTLogger.info(\"[ReceiveMessage] protocol: \" + protocol,  \"    content:  \" + JSON.stringify(data[\"content\"]));\r\n            return  JTReceivePackage.read(receiveMessage);\r\n        }\r\n\r\n        public readComplete(receivePackage:JTIReceivePackage):void\r\n        {\r\n            super.readComplete(receivePackage);\r\n        }\r\n    }\r\n}\r\n"]}