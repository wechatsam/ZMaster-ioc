{"version":3,"sources":["assets\\Script\\src\\network\\contexts\\idleState\\JTAbstractIdleStateAdapter.ts"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;IACA,IAAU,GAAG,CA+DZ;IA/DD,WAAU,GAAG;QAET;YAAyD,8CAAgB;YAmBrE,oCAAY,QAAuB,EAAE,cAA0B,EAAE,WAAsB;gBAA3E,yBAAA,EAAA,gBAAuB;gBAAE,+BAAA,EAAA,mBAA0B;gBAAE,4BAAA,EAAA,eAAsB;gBAAvF,YAEI,iBAAO,SAEV;gBArBS,YAAM,GAAY,IAAI,CAAC;gBAEvB,kBAAY,GAAU,CAAC,CAAC;gBAExB,yBAAmB,GAAU,CAAC,CAAC;gBAE/B,oBAAc,GAAU,CAAC,CAAC;gBAE1B,gBAAU,GAAW,KAAK,CAAC;gBAYjC,KAAI,CAAC,cAAc,GAAG,QAAQ,CAAC;;YACnC,CAAC;YAEM,0CAAK,GAAZ;YAGA,CAAC;YAEM,oDAAe,GAAtB;YAGA,CAAC;YAEM,kDAAa,GAApB;gBAEQ,IAAI,CAAC,UAAU,GAAG,IAAI,CAAC;gBACvB,IAAI,CAAC,WAAW,CAAC,IAAI,CAAC,cAAc,CAAC,CAAC;YAC9C,CAAC;YAES,gDAAW,GAArB,UAAsB,QAAe;gBAEjC,IAAI,CAAC,MAAM,GAAG,OAAO,CAAC,MAAM,CAAC,QAAQ,EAAE,CAAC,CAAC,CAAC;gBAC1C,IAAI,CAAC,MAAM,CAAC,gBAAgB,CAAC,WAAW,CAAC,KAAK,EAAE,IAAI,CAAC,cAAc,EAAE,IAAI,CAAC,CAAC;YAC/E,CAAC;YAES,mDAAc,GAAxB,UAAyB,KAAc;gBAE/B,IAAI,CAAC,IAAI,CAAC,UAAU,EACpB;oBACI,IAAI,CAAC,MAAM,CAAC,IAAI,EAAE,CAAC;oBACnB,OAAO;iBACV;YACT,CAAC;YAES,oDAAe,GAAzB,UAA0B,KAAc;YAGxC,CAAC;YACL,iCAAC;QAAD,CA5DA,AA4DC,CA5DwD,gBAAgB,GA4DxE;QA5DqB,8BAA0B,6BA4D/C,CAAA;IACL,CAAC,EA/DS,GAAG,KAAH,GAAG,QA+DZ","file":"","sourceRoot":"/","sourcesContent":["///<reference path=\"../JTChannelContext.ts\"/>\r\nnamespace com \r\n{\r\n    export abstract class JTAbstractIdleStateAdapter extends JTChannelContext\r\n    {\r\n        protected _timer:JTITimer = null;\r\n\r\n        protected _repeatCount:number = 0;\r\n\r\n        protected _currentRepeatCount:number = 0;\r\n\r\n        protected _heartInterval:number = 0;\r\n\r\n        protected _connected:boolean = false;\r\n\r\n\r\n\r\n        /**\r\n         * 以秒为单位\r\n         * @param interval \r\n         * @param repeatTimes \r\n         */\r\n        constructor(interval:number = 15000, repeatInterval:number = 10, repeatTimes:number = 5)\r\n        {\r\n            super();\r\n            this._heartInterval = interval;\r\n        }\r\n\r\n        public build(): void \r\n        {\r\n  \r\n        }\r\n\r\n        public channelInactive():void\r\n        {\r\n\r\n        }\r\n\r\n        public channelActive(): void \r\n        {\r\n                this._connected = true;\r\n                this.createTimer(this._heartInterval);\r\n        }\r\n\r\n        protected createTimer(interval:number):void\r\n        {\r\n            this._timer = JTTimer.create(interval, 0);\r\n            this._timer.addEventListener(JTTimeEvent.TIMER, this.onTimerHandler, this);\r\n        }\r\n\r\n        protected onTimerHandler(timer:JTITimer):void\r\n        {\r\n                if (!this._connected) \r\n                {\r\n                    this._timer.stop();\r\n                    return;\r\n                }\r\n        }\r\n        \r\n        protected onTimerComplete(timer:JTITimer):void\r\n        {\r\n                // this._channelPipeline.launch();\r\n        }\r\n    }\r\n}\r\n"]}