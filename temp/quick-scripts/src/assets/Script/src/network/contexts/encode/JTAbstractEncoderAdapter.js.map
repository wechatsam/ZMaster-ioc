{"version":3,"sources":["assets\\Script\\src\\network\\contexts\\encode\\JTAbstractEncoderAdapter.ts"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;IAAA,IAAU,GAAG,CA8BZ;IA9BD,WAAU,GAAG;QAET;YAAuD,4CAAuB;YAE1E;uBAEI,iBAAO;YACX,CAAC;YAIM,gDAAa,GAApB,UAAqB,IAAQ;gBAEzB,IAAI,OAAO,GAAO,IAAI,CAAC,KAAK,CAAC,IAAI,CAAC,CAAC;gBACnC,IAAI,eAAe,GAA6B,sBAAsB,CAAC,UAAU,CAAC,sBAAsB,CAAC,gBAAgB,CAAC,CAAC;gBAC3H,IAAI,UAAU,GAAe,eAAe,CAAC,UAAU,CAAC;gBACxD,IAAI,YAAY,GAAiB,UAAU,CAAC,WAAW,CAAC,OAAO,CAAC,QAAQ,CAAC,CAAC;gBAC1E,IAAI,YAAY,IAAI,YAAY,CAAC,SAAS,EAC1C;oBACI,UAAU,CAAC,OAAO,CAAC,OAAO,CAAC,CAAC;iBAC/B;gBACD,QAAQ,CAAC,IAAI,CAAC,oCAAoC,GAAG,OAAO,CAAC,QAAQ,EAAG,cAAc,GAAG,IAAI,CAAC,SAAS,CAAC,OAAO,CAAC,OAAO,CAAC,CAAC,CAAC;YAC9H,CAAC;YAEM,kDAAe,GAAtB;YAGA,CAAC;YAEL,+BAAC;QAAD,CA3BA,AA2BC,CA3BsD,uBAAuB,GA2B7E;QA3BqB,4BAAwB,2BA2B7C,CAAA;IACL,CAAC,EA9BS,GAAG,KAAH,GAAG,QA8BZ","file":"","sourceRoot":"/","sourcesContent":["namespace com \r\n{\r\n    export abstract class JTAbstractEncoderAdapter extends JTChannelContextAdapter implements JTIEncoderAdapter\r\n    {\r\n        constructor()\r\n        {\r\n            super();\r\n        }\r\n\r\n        public abstract encode(data:any):any;\r\n\r\n        public writeComplete(data:any):void\r\n        {\r\n            let message:any = JSON.parse(data);\r\n            let protocolManager:JTAbstractProtocolManager = JTApplicationBootstrap.getContext(JTApplicationBootstrap.CONTEXT_PROTOCOL);\r\n            let protocolUp:JTIProtocol = protocolManager.protocolUp;\r\n            let itemProtocol:JTItemProtocol= protocolUp.getProtocol(message.protocol);\r\n            if (itemProtocol && itemProtocol.isWaiting)\r\n            {\r\n                protocolUp.execute(message);\r\n            }\r\n            JTLogger.info(\"[sendPackage.send] : UpProtocol:  \" + message.protocol,  \"   content: \" + JSON.stringify(message.content));\r\n        }\r\n\r\n        public channelInactive(): void\r\n        {\r\n\r\n        }         \r\n            \r\n    }\r\n}\r\n"]}