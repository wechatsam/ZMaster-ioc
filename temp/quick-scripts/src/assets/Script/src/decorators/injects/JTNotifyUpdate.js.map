{"version":3,"sources":["assets\\Script\\src\\decorators\\injects\\JTNotifyUpdate.ts"],"names":[],"mappings":";;;;;;IAKA,IAAO,GAAG,CAkBT;IAlBD,WAAO,GAAG;QAST,SAAgB,YAAY,CAAC,SAAgB;YAE5C,OAAO,UAAU,MAAU,EAAE,QAAe,EAAE,UAAe;gBAE3D,IAAI,QAAQ,GAAmB,MAAM,CAAC;gBAEtC,QAAQ,CAAC,gBAAgB,CAAC,SAAS,EAAE,MAAM,CAAC,QAAQ,CAAC,EAAE,MAAM,CAAC,CAAC;YACjE,CAAC,CAAA;QACF,CAAC;QARe,gBAAY,eAQ3B,CAAA;IACF,CAAC,EAlBM,GAAG,KAAH,GAAG,QAkBT","file":"","sourceRoot":"/","sourcesContent":["\r\n\r\n/*\r\n* name;\r\n*/\r\nmodule com \r\n{\r\n \r\n\t/**\r\n\t * 与JTResponse一样可能由于装饰器模式下，提前注入方法，所以使用项目的静态变量无法使用，没有扫描到\r\n\t * 通知更新视图\r\n\t * @param eventType 事件类型\r\n\t * @returns \r\n\t */\r\n\texport function NotifyUpdate(eventType:string):Function\r\n    {\r\n\t\treturn function (target:any, property:string, descripter?:any) \r\n        {\r\n\t\t\t\tlet signaler:JTEventSignaler = target;\r\n\t\t\t\t//get 方法取代\tsignaler.__evtMap = {};//由于装饰器注入的对象是单例时，此方法生效（装鉓器的对象有多个时，未测试）因为该对象并未实例化，装饰器\r\n\t\t\t\tsignaler.addEventListener(eventType, target[property], target);\r\n\t\t}\r\n\t}\r\n}\r\n\r\n\r\n\r\n"]}