{"version":3,"sources":["assets\\Script\\src\\datas\\mappers\\JTAbstractResponseMapping.ts"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;IAAA,IAAU,GAAG,CAmCZ;IAnCD,WAAU,GAAG;QAET;YAAwD,6CAAoB;YAA5E;;YAgCA,CAAC;YA9BU,yCAAK,GAAZ;YAGA,CAAC;YAKM,qDAAiB,GAAxB,UAAkD,QAAe,EAAE,QAAU;gBAEzE,yBAAyB,CAAC,UAAU,CAAC,QAAQ,CAAC,GAAG,QAAQ,CAAC;YAC9D,CAAC;YAEM,kDAAc,GAArB,UAAsB,QAAe,EAAE,MAAU,EAAE,cAA8B;gBAA9B,+BAAA,EAAA,sBAA8B;gBAE7E,IAAI,CAAC,cAAc,CAAC,QAAQ,EAAE,IAAI,aAAa,CAAC,MAAM,EAAE,cAAc,CAAC,CAAC,CAAA;YAC5E,CAAC;YAEM,6CAAS,GAAhB,UAA0C,QAAe;gBAErD,OAAO,yBAAyB,CAAC,UAAU,CAAC,QAAQ,CAAC,CAAC;YAC1D,CAAC;YAEM,0CAAM,GAAb,UAAc,QAAe,EAAE,IAAQ;gBAEnC,IAAI,aAAa,GAAiB,yBAAyB,CAAC,UAAU,CAAC,QAAQ,CAAC,CAAC;gBACjF,IAAI,QAAQ,GAAa,aAAa,CAAC,CAAC,CAAC,aAAa,CAAC,MAAM,EAAE,CAAC,CAAC,CAAC,IAAI,CAAC;gBACvE,IAAI,QAAQ;oBAAC,QAAQ,CAAC,MAAM,CAAC,IAAI,CAAC,CAAC;gBACnC,OAAO,QAAQ,CAAC,CAAC,CAAC,QAAQ,CAAC,CAAC,CAAC,IAAI,CAAC;YACtC,CAAC;YAxBgB,oCAAU,GAA4B,EAAE,CAAC;YAyB9D,gCAAC;SAhCD,AAgCC,CAhCuD,oBAAoB,GAgC3E;QAhCqB,6BAAyB,4BAgC9C,CAAA;IACL,CAAC,EAnCS,GAAG,KAAH,GAAG,QAmCZ","file":"","sourceRoot":"/","sourcesContent":["namespace com \r\n{\r\n    export abstract class JTAbstractResponseMapping extends JTApplicationContext\r\n    {\r\n        public build(): void \r\n        {\r\n            \r\n        }\r\n\r\n        protected static mappingMap:{[protocol:number]: any} = {};\r\n\r\n\r\n        public registerToMapping<T extends JTClassMapper>(protocol:number, __mapper:T):void\r\n        {\r\n            JTAbstractResponseMapping.mappingMap[protocol] = __mapper;\r\n        }\r\n\r\n        public registerMapper(protocol:number, _class:any, createFromPool:boolean = false):void\r\n        {\r\n            this.registerMapper(protocol, new JTClassMapper(_class, createFromPool))\r\n        }\r\n\r\n        public getMapper<T extends JTClassMapper>(protocol:number):T\r\n        {\r\n            return JTAbstractResponseMapping.mappingMap[protocol];\r\n        }\r\n\r\n        public create(protocol:number, data:any):any\r\n        {\r\n            let __classMapper:JTClassMapper = JTAbstractResponseMapping.mappingMap[protocol];\r\n            let dataInfo:JTIMapper = __classMapper ? __classMapper.create() : null;\r\n            if (dataInfo)dataInfo.update(data);\r\n            return dataInfo ? dataInfo : data;\r\n        }\r\n    }\r\n}\r\n"]}