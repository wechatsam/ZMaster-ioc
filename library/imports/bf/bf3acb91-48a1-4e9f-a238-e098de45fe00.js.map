{"version":3,"sources":["assets\\Script\\src\\network\\protocols\\JTAbstractProtocolManager.ts"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;IAAA,IAAU,GAAG,CAgDZ;IAhDD,WAAU,GAAG;QAET;YAAwD,6CAAoB;YAMxE;gBAAA,YAEI,iBAAO,SACV;gBAPM,gBAAU,GAAe,IAAI,CAAC;gBAE9B,kBAAY,GAAe,IAAI,CAAC;;YAKvC,CAAC;YAEM,yCAAK,GAAZ;YAGA,CAAC;YAQM,wDAAoB,GAA3B,UAA4B,QAAe,EAAE,OAAe,EAAE,QAAgB;gBAEtE,IAAI,CAAC,YAAY,CAAC,gBAAgB,CAAC,QAAQ,EAAE,OAAO,EAAE,QAAQ,CAAC,CAAA;YACvE,CAAC;YASO,sDAAkB,GAAzB,UAA0B,QAAe,EAAE,OAAe,EAAE,QAAgB;gBAEzE,IAAI,CAAC,UAAU,CAAC,gBAAgB,CAAC,QAAQ,EAAE,OAAO,EAAE,QAAQ,CAAC,CAAC;YACjE,CAAC;YAEK,wCAAI,GAAX,UAAY,OAAW,EAAE,SAAa;gBAE9B,IAAI,CAAC,UAAU,GAAG,IAAI,OAAO,EAAE,CAAC;gBAChC,IAAI,CAAC,YAAY,GAAG,IAAI,SAAS,EAAE,CAAC;YAC5C,CAAC;YAEL,gCAAC;QAAD,CA7CA,AA6CC,CA7CuD,oBAAoB,GA6C3E;QA7CqB,6BAAyB,4BA6C9C,CAAA;IACL,CAAC,EAhDS,GAAG,KAAH,GAAG,QAgDZ","file":"","sourceRoot":"/","sourcesContent":["namespace com \r\n{\r\n    export abstract class JTAbstractProtocolManager extends JTApplicationContext\r\n    {\r\n        public protocolUp:JTIProtocol = null;\r\n\r\n        public downProtocol:JTIProtocol = null;\r\n\r\n        constructor()\r\n        {\r\n            super();\r\n        }\r\n\r\n        public build():void\r\n        {\r\n            \r\n        }\r\n\r\n        /**\r\n         * 注册下行协议\r\n         * @param protocol 协议号\r\n         * @param waiting 是否显示转圈\r\n         * @param security 加密方式\r\n         */\r\n        public registerDownProtocol(protocol:number, waiting:boolean, security?:string):void\r\n        {\r\n                this.downProtocol.registerProtocol(protocol, waiting, security)\r\n        }\r\n\r\n        \r\n        /**\r\n         * 注册上行协议\r\n         * @param protocol 协议号\r\n         * @param waiting 是否显示转圈\r\n         * @param security 解密方式\r\n         */\r\n         public registerUpProtocol(protocol:number, waiting:boolean, security?:string):void\r\n         {\r\n            this.protocolUp.registerProtocol(protocol, waiting, security);\r\n         }\r\n\r\n        public bind(classUp:any, classDown:any):void\r\n        {\r\n                this.protocolUp = new classUp();\r\n                this.downProtocol = new classDown();\r\n        }\r\n        \r\n    }\r\n}\r\n"]}