{"version":3,"sources":["assets\\Script\\src\\network\\protocols\\JTProtocol.ts"],"names":[],"mappings":";;;;;;IAAA,IAAU,GAAG,CA+DZ;IA/DD,WAAU,GAAG;QAET;YAWI;gBATQ,eAAU,GAAY,IAAI,CAAC;gBAE3B,cAAS,GAAY,IAAI,CAAC;gBAE1B,iBAAY,GAAU,IAAI,CAAC;gBAO/B,IAAI,CAAC,UAAU,GAAG,EAAE,CAAC;gBACrB,IAAI,CAAC,YAAY,GAAG,EAAE,CAAC;gBACvB,IAAI,CAAC,KAAK,EAAE,CAAC;YACjB,CAAC;YAEM,0BAAK,GAAZ;YAIA,CAAC;YASM,qCAAgB,GAAvB,UAAwB,QAAe,EAAE,OAAe,EAAE,QAAgB;gBAEnE,IAAI,CAAC,YAAY,CAAC,QAAQ,CAAC,GAAG,cAAc,CAAC,MAAM,CAAC,QAAQ,EAAE,OAAO,EAAE,QAAQ,CAAC,CAAA;gBAChF,OAAO,IAAI,IAAI,CAAC,UAAU,CAAC,IAAI,CAAC,QAAQ,CAAC,CAAC;YACjD,CAAC;YAMD,sBAAW,iCAAS;qBAApB;oBAEI,OAAO,IAAI,CAAC,UAAU,CAAC;gBAC3B,CAAC;;;eAAA;YAED,sBAAW,gCAAQ;qBAAnB;oBAEI,OAAO,IAAI,CAAC,SAAS,CAAC;gBAC1B,CAAC;;;eAAA;YAEM,gCAAW,GAAlB,UAAmB,QAAe;gBAE9B,OAAO,IAAI,CAAC,YAAY,CAAC,QAAQ,CAAC,CAAC;YACvC,CAAC;YAEM,4BAAO,GAAd,UAAe,OAAY;YAG3B,CAAC;YAnDa,iBAAM,GAAU,CAAC,CAAC;YAClB,gBAAK,GAAU,CAAC,CAAC;YAmDnC,iBAAC;SA5DD,AA4DC,IAAA;QA5DY,cAAU,aA4DtB,CAAA;IACL,CAAC,EA/DS,GAAG,KAAH,GAAG,QA+DZ","file":"","sourceRoot":"/","sourcesContent":["namespace com \r\n{\r\n    export class JTProtocol implements JTIProtocol\r\n    {\r\n        private _protocols:number[] = null;\r\n\r\n        private _encrypts:number[] = null;\r\n\r\n        private _protocolMap:Object = null;\r\n        \r\n        public static NORMAL:number = 1;\r\n        public static ERROR:number = 0;\r\n\r\n        constructor()\r\n        {\r\n            this._protocols = [];\r\n            this._protocolMap = {};\r\n            this.build();\r\n        }\r\n\r\n        public build(): void \r\n        {\r\n            \r\n   \r\n        }\r\n\r\n\r\n        /**\r\n         * \r\n         * @param protocol 协议号\r\n         * @param waiting 是否显示隐藏通信转圈\r\n         * @param encrypt 是否显示加解密的转圈\r\n         */\r\n        public registerProtocol(protocol:number, waiting:boolean, security?:string):void \r\n        {\r\n               this._protocolMap[protocol] = JTItemProtocol.create(protocol, waiting, security)\r\n               waiting && this._protocols.push(protocol);\r\n        }\r\n\r\n        /**\r\n         * 同时拥有加解密功能的协议号列表\r\n         * \r\n         */\r\n        public get protocols():number[]\r\n        {\r\n            return this._protocols;\r\n        }\r\n\r\n        public get encrypts():number[]\r\n        {\r\n            return this._encrypts;\r\n        }\r\n\r\n        public getProtocol(protocol:number):JTItemProtocol\r\n        {\r\n            return this._protocolMap[protocol];\r\n        }\r\n\r\n        public execute(message: any): void \r\n        {\r\n \r\n        }\r\n    }\r\n}\r\n"]}