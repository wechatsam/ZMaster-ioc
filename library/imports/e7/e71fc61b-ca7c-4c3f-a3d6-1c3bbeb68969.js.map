{"version":3,"sources":["assets\\Script\\src\\common\\JTLogger.ts"],"names":[],"mappings":";;;;;;IAAA,IAAU,GAAG,CA2DZ;IA3DD,WAAU,GAAG;QAET;YAAA;YAwDA,CAAC;YAjDiB,aAAI,GAAlB;gBAAmB,cAAO;qBAAP,UAAO,EAAP,qBAAO,EAAP,IAAO;oBAAP,yBAAO;;gBAEtB,IAAI,OAAO,GAAU,EAAE,CAAC;gBACxB,KAAK,IAAI,CAAC,GAAU,CAAC,EAAE,CAAC,GAAG,IAAI,CAAC,MAAM,EAAE,CAAC,EAAG,EAC5C;oBACI,OAAO,IAAI,IAAI,CAAC,CAAC,CAAC,CAAC;iBACtB;gBACD,IAAI,CAAC,KAAK,CAAC,IAAI,CAAC,QAAQ,EAAE,OAAO,CAAC,CAAC;YACvC,CAAC;YAEa,cAAK,GAAnB;gBAAoB,cAAO;qBAAP,UAAO,EAAP,qBAAO,EAAP,IAAO;oBAAP,yBAAO;;gBAEvB,IAAI,OAAO,GAAU,EAAE,CAAC;gBACxB,KAAK,IAAI,CAAC,GAAU,CAAC,EAAE,CAAC,GAAG,IAAI,CAAC,MAAM,EAAE,CAAC,EAAG,EAC5C;oBACI,OAAO,IAAI,IAAI,CAAC,SAAS,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC,CAAC;iBACtC;gBACD,IAAI,CAAC,KAAK,CAAC,IAAI,CAAC,SAAS,EAAE,OAAO,CAAC,CAAC;YACxC,CAAC;YAEa,eAAM,GAApB,UAAqB,IAAY;gBAAE,cAAO;qBAAP,UAAO,EAAP,qBAAO,EAAP,IAAO;oBAAP,6BAAO;;gBAEtC,IAAI,OAAO,GAAU,EAAE,CAAC;gBACxB,KAAK,IAAI,CAAC,GAAU,CAAC,EAAE,CAAC,GAAG,IAAI,CAAC,MAAM,EAAE,CAAC,EAAG,EAC5C;oBACI,OAAO,IAAI,IAAI,CAAC,CAAC,CAAC,CAAC;iBACtB;gBACD,IAAI,CAAC,IAAI;oBAAE,MAAM,IAAI,KAAK,CAAC,OAAO,CAAC,CAAC;YACxC,CAAC;YAEa,cAAK,GAAnB;gBAAoB,cAAO;qBAAP,UAAO,EAAP,qBAAO,EAAP,IAAO;oBAAP,yBAAO;;gBAEvB,IAAI,OAAO,GAAU,EAAE,CAAC;gBACxB,KAAK,IAAI,CAAC,GAAU,CAAC,EAAE,CAAC,GAAG,IAAI,CAAC,MAAM,EAAE,CAAC,EAAG,EAC5C;oBACI,OAAO,IAAI,IAAI,CAAC,CAAC,CAAC,CAAC;iBACtB;gBACD,MAAM,IAAI,KAAK,CAAC,OAAO,CAAC,CAAC;YAC7B,CAAC;YAEc,cAAK,GAApB,UAAqB,IAAW,EAAE,IAAW;gBAEzC,IAAI,IAAI,GAAQ,IAAI,IAAI,EAAE,CAAC;gBAC3B,IAAI,IAAI,GAAU,IAAI,CAAC,QAAQ,EAAE,CAAC;gBAClC,IAAI,OAAO,GAAU,IAAI,CAAC,UAAU,EAAE,CAAC;gBACvC,IAAI,OAAO,GAAU,IAAI,CAAC,UAAU,EAAE,CAAC;gBACvC,IAAI,IAAI,GAAU,IAAI,GAAG,GAAG,GAAG,OAAO,GAAG,GAAG,GAAG,OAAO,GAAG,QAAQ,CAAA;gBACjE,OAAO,CAAC,GAAG,CAAC,IAAI,GAAG,IAAI,GAAG,IAAI,CAAC,CAAC;YACpC,CAAC;YArDc,iBAAQ,GAAU,UAAU,CAAC;YAC7B,kBAAS,GAAU,WAAW,CAAC;YAC/B,kBAAS,GAAU,WAAW,CAAC;YAC/B,kBAAS,GAAU,WAAW,CAAC;YAmDlD,eAAC;SAxDD,AAwDC,IAAA;QAxDY,YAAQ,WAwDpB,CAAA;IACL,CAAC,EA3DS,GAAG,KAAH,GAAG,QA2DZ","file":"","sourceRoot":"/","sourcesContent":["namespace com\r\n{\r\n    export class JTLogger \r\n    {\r\n        private static LOG_INFO:string = \"[INFO] :\";\r\n        private static LOG_ASSET:string = \"[ASSET] :\";\r\n        private static LOG_DEBUG:string = \"[DEBUG] :\";\r\n        private static LOG_ERROR:string = \"[ERROR] :\";\r\n\r\n        public static info(...msgs):void\r\n        {\r\n            let content:string = \"\";\r\n            for (var i:number = 0; i < msgs.length; i ++)\r\n            {\r\n                content += msgs[i];\r\n            }\r\n            this.print(this.LOG_INFO, content);\r\n        }\r\n    \r\n        public static debug(...msgs):void\r\n        {\r\n            let content:string = \"\";\r\n            for (var i:number = 0; i < msgs.length; i ++)\r\n            {\r\n                content += JSON.stringify(msgs[i]);\r\n            }\r\n            this.print(this.LOG_DEBUG, content);\r\n        }\r\n    \r\n        public static assert(flag:Boolean, ...msgs):void\r\n        {\r\n            let content:string = \"\";\r\n            for (var i:number = 0; i < msgs.length; i ++)\r\n            {\r\n                content += msgs[i];\r\n            }\r\n            if (!flag) throw new Error(content);\r\n        }\r\n\r\n        public static error(...msgs):void\r\n        {\r\n            let content:string = \"\";\r\n            for (var i:number = 0; i < msgs.length; i ++)\r\n            {\r\n                content += msgs[i];\r\n            }\r\n            throw new Error(content);\r\n        }\r\n     \r\n        private static print(type:string, info:string):void\r\n        {\r\n            var date:Date = new Date();\r\n            var hour:number = date.getHours();\r\n            var minutes:number = date.getMinutes();\r\n            var seconds:number = date.getSeconds();\r\n            var time:string = hour + \":\" + minutes + \":\" + seconds + \" >>>> \"\r\n            console.log(type + time + info);\r\n        }\r\n    }\r\n}\r\n"]}