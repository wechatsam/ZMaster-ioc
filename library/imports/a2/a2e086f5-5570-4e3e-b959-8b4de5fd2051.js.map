{"version":3,"sources":["assets\\Script\\src\\libs\\worker.js"],"names":["onmessage","evt","data","__THREAD_TASK__","task","_run","ctx","threadSignal","ret","fn","call","sharedObj","postMessage","error","returnValue","taskId","Function","sleep","interval","setTimeout","runOnUiThread","__UI_TASK__","toString","ex"],"mappings":";;;;;;AAAAA,SAAS,GAAG,mBAASC,GAAT,EACZ;AACI,MAAIC,IAAI,GAAGD,GAAG,CAACC,IAAf;;AACA,MAAGA,IAAI,IAAIA,IAAI,CAACC,eAAhB,EACA;AACI,QAAIC,IAAI,GAAGF,IAAI,CAACC,eAAhB;;AACA,QACA;AAAA,UAcaE,IAdb,GAcI,SAASA,IAAT,GACA;AACIC,QAAAA,GAAG,CAACC,YAAJ,GAAmB,IAAnB;AACA,YAAIC,GAAG,GAAGC,EAAE,CAACC,IAAH,CAAQJ,GAAR,EAAaJ,IAAI,CAACS,SAAlB,CAAV;AACAC,QAAAA,WAAW,CAAC;AAACC,UAAAA,KAAK,EAAC,IAAP;AAAaC,UAAAA,WAAW,EAACN,GAAzB;AAA8BL,UAAAA,eAAe,EAACC,IAA9C;AAAoDO,UAAAA,SAAS,EAACT,IAAI,CAACS,SAAnE;AAA8EI,UAAAA,MAAM,EAAEb,IAAI,CAACa;AAA3F,SAAD,CAAX;AACH,OAnBL;;AACI,UAAIN,EAAE,GAAI,IAAIO,QAAJ,CAAa,YAAWZ,IAAxB,CAAD,EAAT;AACA,UAAIE,GAAG,GAAG;AACMC,QAAAA,YAAY,EAAE,IADpB;AAEMU,QAAAA,KAAK,EAAE,eAASC,QAAT,EACP;AACIZ,UAAAA,GAAG,CAACC,YAAJ,GAAmB,KAAnB;AACAY,UAAAA,UAAU,CAACd,IAAD,EAAOa,QAAP,CAAV;AACH,SANP;AAOME,QAAAA,aAAa,EAAE,uBAAShB,IAAT,EACf;AACIQ,UAAAA,WAAW,CAAC;AAACS,YAAAA,WAAW,EAACjB,IAAI,CAACkB,QAAL,EAAb;AAA8BX,YAAAA,SAAS,EAACT,IAAI,CAACS;AAA7C,WAAD,CAAX;AACH;AAVP,OAAV;;AAmBAN,MAAAA,IAAI,CAAC,CAAD,CAAJ;AACH,KAvBD,CAwBA,OAAMkB,EAAN,EACA;AACYX,MAAAA,WAAW,CAAC;AAACC,QAAAA,KAAK,EAACU,EAAE,CAACD,QAAH,EAAP;AAAuBR,QAAAA,WAAW,EAAC,IAAnC;AAAyCH,QAAAA,SAAS,EAAET,IAAI,CAACS;AAAzD,OAAD,CAAX;AACX;AACJ;AACJ,CAnCD","sourceRoot":"/","sourcesContent":["onmessage = function(evt)\n{\n    var data = evt.data;\n    if(data && data.__THREAD_TASK__)\n    {\n        var task = data.__THREAD_TASK__;\n        try\n        {\n            var fn = (new Function(\"return \"+ task))();\n            var ctx = {\n                            threadSignal: true,\n                            sleep: function(interval)\n                            {\n                                ctx.threadSignal = false;\n                                setTimeout(_run, interval);\n                            },\n                            runOnUiThread: function(task)\n                            {\n                                postMessage({__UI_TASK__:task.toString(), sharedObj:data.sharedObj});\n                            }\n                        }\n            function _run()\n            {\n                ctx.threadSignal = true;\n                var ret = fn.call(ctx, data.sharedObj);\n                postMessage({error:null, returnValue:ret, __THREAD_TASK__:task, sharedObj:data.sharedObj, taskId: data.taskId});\n            }\n\n            _run(0);\n        }\n        catch(ex)\n        {\n                    postMessage({error:ex.toString() , returnValue:null, sharedObj: data.sharedObj});\n        }\n    }\n}"]}