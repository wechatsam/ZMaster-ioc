{"version":3,"sources":["assets\\Script\\src\\events\\JTCommand.ts"],"names":[],"mappings":"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","file":"","sourceRoot":"/","sourcesContent":["namespace com \r\n{\r\n    export class JTCommand implements JTIPoolObject\r\n    {\r\n        private _caller:any = null;\r\n        private _method:Function = null;\r\n        private _args:any = null;\r\n        private _once:Boolean = false;\r\n\r\n        public recycle() \r\n        {\r\n            this._caller = this._method = this._args = null;\r\n        }\r\n\r\n        public setTo(caller:any, method:Function, args?:any, once:Boolean = false):JTCommand\r\n        {\r\n            this._caller =caller;\r\n            this._method = method;\r\n            this._args = args;\r\n            this._once = once;\r\n            return this;\r\n        }\r\n\r\n        /**\r\n        *执行处理器。\r\n        */\r\n        public run():any\r\n        {\r\n            if (this._method == null) return null;\r\n            var result=this._method.apply(this._caller, this._args);\r\n            this._once && this.recover();\r\n            return result;\r\n        }\r\n\r\n            /**\r\n            *执行处理器，携带额外数据。\r\n            *@param data 附加的回调数据，可以是单数据或者Array(作为多参)。\r\n            */\r\n        public runWith(data):any\r\n        {\r\n            if (this._method == null)return null;\r\n            if (data == null)\r\n                var result = this._method.apply(this._caller, this._args);\r\n            else if (!this._args && !data.unshift)result = this._method.call(this._caller, data);\r\n            else if (this._args)result = this._method.apply(this._caller, this._args.concat(data));\r\n            else result = this._method.apply(this._caller, data instanceof Array ? [data] : data); //调用apply时，不管参数是否为数组，方法自动会认为参数为数组，所以传入数组时，一定要判断\r\n            this._once && this.recover();\r\n            return result;\r\n        }\r\n\r\n        /**\r\n        *清理对象引用。\r\n        */\r\n        public clear():JTCommand\r\n        {\r\n            this._method = this._args = this._caller = null;\r\n            return this;\r\n        }\r\n\r\n        /**\r\n        *清理并回收到 Handler 对象池内。\r\n        */\r\n        public recover()\r\n        {\r\n            this.clear();\r\n        }\r\n\r\n        public get caller():any\r\n        {\r\n            return this._caller;\r\n        }\r\n\r\n        public get method():Function\r\n        {\r\n            return this._method;\r\n        }\r\n\r\n        public get once():Boolean\r\n        {\r\n            return this._once;\r\n        }\r\n\r\n        public static get pool():JTIPool\r\n        {\r\n            if(!this._pool)\r\n            {\r\n                this._pool = JTPool.instance(JTCommand);\r\n            }\r\n            return this._pool;\r\n        }\r\n        \r\n        private static _pool:JTIPool = null;\r\n        public static create(caller:any, method:Function, args?:any, once:Boolean = false):JTCommand\r\n        {\r\n            var command:JTCommand = this.pool.get() as JTCommand;\r\n            command.setTo(caller, method, args, once);\r\n            return command;\r\n        }\r\n\r\n        public static put(command:JTCommand):void\r\n        {\r\n            this.pool.put(command)\r\n        }\r\n    }\r\n}\r\n"]}